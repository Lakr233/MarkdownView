let nestedListsDocument = ###"""
# 多层嵌套列表测试

## 1. 嵌套的编号列表

1. 第一个项目
    1. 第一个子项目
    2. 第二个子项目
        1. 第一个子子项目
        2. 第二个子子项目
2. 第二个项目
3. 第三个项目

---

## 2. 混合嵌套列表

- 无序列表第一层 - 项目 A
    1. 有序列表第二层 - 项目 1
        - [ ] 任务列表第三层 - 任务 X (未完成)
        - [x] 任务列表第三层 - 任务 Y (已完成)
            - 无序列表第四层 - 子任务 a
            - 无序列表第四层 - 子任务 b
    2. 有序列表第二层 - 项目 2
        - 无序列表第三层 - 子项
- 无序列表第一层 - 项目 B
    - [ ] 这是一个任务项

---

## 3. 深度嵌套示例

1. 顶层项目 1
    - 第二层无序项
        1. 第三层有序项
            - 第四层无序项
                - 第五层无序项
2. 顶层项目 2
    1. 第二层有序项 A
    2. 第二层有序项 B
        - 第三层描述内容

---

## 4. 带内容的嵌套列表

1. **第一步：准备工作**

    在开始之前，需要准备以下材料：
    - 材料 A
    - 材料 B
        - 子材料 B1
        - 子材料 B2

2. **第二步：执行操作**

    按照以下顺序执行：
    1. 操作 A
    2. 操作 B
        1. 详细步骤 B1
        2. 详细步骤 B2

3. **第三步：验证结果**
    - [ ] 检查项 1
    - [ ] 检查项 2
    - [x] 检查项 3（已完成）
"""###
